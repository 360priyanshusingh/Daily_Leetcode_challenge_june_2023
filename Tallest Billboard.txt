class Solution {
public:
    int helper(map<pair<int,int>,int> &dp,int index,int sum,vector<int>& rods){
        if(index==rods.size()){
            if(sum==0){
                return 0;
            }
            else{
                return INT_MIN;
            }
        }
        if(dp.find({index,sum})!=dp.end()){
            return dp[{index,sum}];
        }
        int op1=rods[index]+helper(dp,index+1,sum+rods[index],rods);
        int op2=helper(dp,index+1,sum-rods[index],rods);
        int op3=helper(dp,index+1,sum,rods);
        dp[{index,sum}]=max({op1,op2,op3});

        return dp[{index,sum}];
    }
    int tallestBillboard(vector<int>& rods) {
        map<pair<int,int>, int> dp;
        return helper(dp,0,0,rods);

    }
};