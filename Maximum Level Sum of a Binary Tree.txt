/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<pair<int,TreeNode*>> q;
        q.push({1,root});
        
        pair<int,int> ma;
        ma.second=INT_MIN;
        while(q.size()!=0){
            int s=q.size();
            int sum=0,l;
            while(s--){
               auto top=q.front();
                q.pop();
                TreeNode* node=top.second;
                 l=top.first;
                sum+=node->val;
                if(node->left!=NULL){
                    q.push({l+1,node->left});
                }
               if(node->right!=NULL){
                    q.push({l+1,node->right});
                }

            }

            if(ma.second < sum){
                ma.second=sum;
                ma.first=l;
            }

        }

        return ma.first;
    }
};