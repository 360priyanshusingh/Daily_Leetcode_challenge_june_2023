class Solution {
public: 
    int f;

    int helper(vector<int>& prices,int buy,int index,vector<vector<int>> &dp){
        if(prices.size()==index) return 0;
        int profit=0;
         
        if(dp[index][buy]!=-1){
            return dp[index][buy];
        }

        if(buy){
            int not_buy=helper(prices,1,index+1,dp);
            int abuy=-prices[index]+helper(prices,0,index+1,dp);
            profit=max(not_buy,abuy);
        }
        else{
            int not_sell=helper(prices,0,index+1,dp);
            int a_sell=(prices[index]-f)+helper(prices,1,index+1,dp) ;
            profit=max(not_sell,a_sell);
        }
          
          return dp[index][buy]=profit;
    }
    int maxProfit(vector<int>& prices, int fee) {
        int n=prices.size();
        vector<vector<int>> dp(n,vector<int> (2,-1));
           f=fee;
        return helper(prices,1,0,dp);
       }

};